- name: Check if kubeadm has already run
  stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: kubeadm_ca

- name: Init cluster if needed
  include_tasks: init.yaml
  when: not kubeadm_ca.stat.exists
  run_once: yes

- name: create .kube directory for "{{ user }}"
  file:
    path: /home/{{ user }}/.kube
    state: directory
    mode: 0755
    owner: "{{ user }}"
    group: "{{ user }}"

- name: copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/{{ user }}/.kube/config
    remote_src: yes
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0600

- name: create .kube directory for ansible user"
  file:
    path: /home/ansible/.kube
    state: directory
    mode: 0755
    owner: "ansible"
    group: "ansible"

- name: copy admin.conf to ansible's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ansible/.kube/config
    remote_src: yes
    owner: "ansible"
    group: "ansible"
    mode: 0600

- name: Get kubeadm join command
  command: kubeadm token create --print-join-command
  register: kubernetes_join_command

- name: Set the kubeadm join command globally.
  set_fact:
    kubernetes_join_command: "{{ kubernetes_join_command.stdout }}"
    cacheable: yes
  when: kubernetes_join_command.stdout is defined

- name: Install python kubernetes module
  pip:
    name: kubernetes

- name: copy kubeconfig file to local machine
  fetch:
    src: /home/ansible/.kube/config
    dest: ../../../config/{{ cluster_name }}/kubeconfig
    flat: yes