# Use ingressClass. Ignored if Traefik version < 2.3 / kubernetes < 1.18.x
ingressClass:
  enabled: true
  isDefaultClass: true
  
experimental:
  http3:
    enabled: true
  plugins:
    enabled: true
  kubernetesGateway:
    enabled: true
    
ingressRoute:
  dashboard:
    enabled: true
providers:
  kubernetesCRD:
    enabled: true
    allowCrossNamespace: true
    allowExternalNameServices: true
    allowEmptyServices: false
    ingressClass: traefik
    
  kubernetesIngress:
    enabled: true
    allowExternalNameServices: true
    allowEmptyServices: false
    publishedService:
      enabled: true
      
additionalArguments:
- "--providers.file.filename=/config/dynamic.toml"
- "--ping"
- "--ping.entrypoint=web"
- "--entryPoints.websecure.forwardedHeaders.insecure"
- "--serverstransport.insecureskipverify=true"
- "--api.insecure=true"
- "--providers.kubernetesingress.ingressclass=traefik"

logs:
  general:
    level: ERROR
  access:
    enabled: false

metrics:
  prometheus:
    entryPoint: metrics
    addRoutersLabels: true
  

globalArguments:
  - "--global.checknewversion"


envFrom: []
# - configMapRef:
#     name: config-map-name
# - secretRef:
#     name: secret-name

ports:
  traefik:
    port: 9000
    expose: true
    exposedPort: 9000
    protocol: TCP
  web:
    port: 8000
    expose: true
    exposedPort: 80
    protocol: TCP
  websecure:
    port: 8443
    expose: true
    exposedPort: 443
    protocol: TCP
  metrics:
    port: 9100
    expose: true
    exposedPort: 9100
    protocol: TCP

service:
  enabled: true
  type: LoadBalancer
  annotations: {}
  labels: {}
  spec:
    loadBalancerIP: "10.0.0.220"

persistence:
  enabled: false
  name: data
#  existingClaim: ""
  accessMode: ReadWriteOnce
  size: 128Mi
  # storageClass: ""
  path: /data
  annotations: {}
  # subPath: "" # only mount a subpath of the Volume into the pod

resources: {}
  # requests:
  #   cpu: "100m"
  #   memory: "50Mi"
  # limits:
  #   cpu: "300m"
  #   memory: "150Mi"